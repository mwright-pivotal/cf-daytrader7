<server>
	<featureManager>
		<feature>ejb-3.2</feature>
		<feature>servlet-3.1</feature>
		<feature>jsf-2.2</feature>
		<feature>jpa-2.1</feature>
		<feature>mdb-3.2</feature>
		<feature>wasJmsServer-1.0</feature>
		<feature>wasJmsClient-2.0</feature>
		<feature>cdi-1.2</feature>
		<feature>websocket-1.1</feature>
		<feature>concurrent-1.0</feature>
		<feature>jsonp-1.0</feature>
		<feature>beanValidation-1.1</feature>
		<feature>localConnector-1.0</feature>
		<feature>javaee-7.0</feature>
	</featureManager>

	<application id="daytrader7" location="daytrader-ee7.ear" name="daytrader7">
	</application>

	<!-- allow reuse of 'busy' ports for fast server recycling on linux (where 
		ports remain blocked for up to 2 mins after server stops) ${tradelite.http.port} 
		set in bootstrap.properties -->
	<httpEndpoint host="*" httpPort="9082" httpsPort="9443" id="defaultHttpEndpoint">
		<tcpOptions soReuseAddr="true"/>
		<httpOptions maxKeepAliveRequests="-1"/>
	</httpEndpoint>

	<iiopEndpoint id="defaultIiopEndpoint" iiopPort="2809" iiopsPort="2810">
		<iiopsOptions id="iiopsConfig" iiopsPort="2810" sslRef="defaultSSLSettings" suppressHandshakeErrors="true"/>
	</iiopEndpoint>

	<connectionManager agedTimeout="-1" connectionTimeout="0" id="conMgr1" maxIdleTime="-1" maxPoolSize="100" minPoolSize="100" purgePolicy="FailingConnectionOnly" reapTime="-1"/>

	<jdbcDriver id="DerbyEmbedded" libraryRef="DerbyLib"/>
	<library filesetRef="DerbyFileset" id="DerbyLib"/>
	<fileset dir="${server.config.dir}/lib" id="DerbyFileset" includes="derby.jar"/>

    <library filesetRef="RabbitFileset" id="global"/>
	<fileset dir="${server.config.dir}/lib" id="RabbitFileset" includes="amqp-client*.jar,slf4j*.jar"/>
	<authData id="TradeDataSourceAuthData" password="db_password" user="db_username"/>
	<authData id="TradeAdminAuthData" password="db_password" user="db_username"/>

	<dataSource connectionManagerRef="conMgr1" id="DefaultDataSource" isolationLevel="TRANSACTION_READ_COMMITTED" jdbcDriverRef="DerbyEmbedded" jndiName="jdbc/TradeDataSource" statementCacheSize="60">
		<properties.derby.embedded createDatabase="create" databaseName="tradedb" password="db_password" user="db_username"/>
	</dataSource>

	<messagingEngine id="defaultME">
		<queue id="TradeBrokerQueue"/>
		<topicSpace id="TradeTopicSpace"/>
	</messagingEngine>

	<jmsQueueConnectionFactory connectionManagerRef="ConMgr3" jndiName="jms/TradeBrokerQCF">
		<properties.wasJms/>
	</jmsQueueConnectionFactory>
	<connectionManager id="ConMgr3" maxPoolSize="20"/>

	<jmsTopicConnectionFactory connectionManagerRef="ConMgr4" jndiName="jms/TradeStreamerTCF">
		<properties.wasJms/>
	</jmsTopicConnectionFactory>
	<connectionManager id="ConMgr4" maxPoolSize="20"/>

	<jmsQueue id="jms/TradeBrokerQueue" jndiName="jms/TradeBrokerQueue">
		<properties.wasJms deliveryMode="NonPersistent" queueName="TradeBrokerQueue"/>
	</jmsQueue>

	<jmsTopic id="TradeStreamerTopic" jndiName="jms/TradeStreamerTopic">
		<properties.wasJms deliveryMode="NonPersistent" topicSpace="TradeTopicSpace"/>
	</jmsTopic>

	<jmsActivationSpec id="eis/TradeBrokerMDB">
		<properties.wasJms destinationRef="jms/TradeBrokerQueue"/>
	</jmsActivationSpec>

	<jmsActivationSpec id="eis/TradeStreamerMDB">
		<properties.wasJms destinationRef="TradeStreamerTopic" destinationType="javax.jms.Topic"/>
	</jmsActivationSpec>

	<applicationMonitor updateTrigger="mbean"/>

	<ssl clientAuthenticationSupported="true" id="defaultSSLSettings" keyStoreRef="defaultKeyStore" trustStoreRef="defaultTrustStore"/>
	<keyStore id="defaultKeyStore" password="p1v0tal"/>
	<keyStore id="defaultTrustStore" password="p1v0tal"/>


	<basicRegistry id="basic" realm="customRealm">
		<user name="mwright" password="p1v0tal"/>
		<group name="grp1">
			<member name="mwright"/>
		</group>
		<group name="grp2">
			<member name="mwright"/>
		</group>
		<group name="grp3">
			<member name="mwright"/>
		</group>
	</basicRegistry>

	<orb id="defaultOrb">
		<serverPolicy.csiv2>
			<layers>
				<attributeLayer identityAssertionEnabled="false"/>
				<authenticationLayer establishTrustInClient="Required" mechanisms="LTPA,GSSUP"/>
				<transportLayer sslRef="defaultSSLSettings"/>
			</layers>
		</serverPolicy.csiv2>
		<clientPolicy.csiv2>
			<layers>
				<attributeLayer identityAssertionEnabled="false"/>
				<authenticationLayer establishTrustInClient="Supported" mechanisms="LTPA,GSSUP"/>
				<transportLayer/>
			</layers>
		</clientPolicy.csiv2>
	</orb>

    <webApplication id="movieplex7" location="movieplex7-1.0-SNAPSHOT.war" name="movieplex7"/>
</server>